# Generated by Django 4.1.1 on 2024-01-11 01:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("data", "0103_legislativesession_last_attempted_bills_scrape_at_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ScrapedNameMatch",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(db_index=True, max_length=300)),
                ("approved", models.BooleanField(default=False)),
                ("vote_ids", models.JSONField(default=list)),
                ("bill_sponsorship_ids", models.JSONField(default=list)),
                ("created_at", models.DateTimeField()),
            ],
            options={
                "verbose_name_plural": "scraped name matches",
            },
        ),
        migrations.CreateModel(
            name="ScrapedNameUnresolvedMatch",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(db_index=True, max_length=300)),
                (
                    "resolution",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "Pending"),
                            ("matched", "Matched"),
                            ("ambiguous", "Ambiguous"),
                            ("no_match", "No Match"),
                            ("ignore", "Ignore"),
                            ("needs_person", "Needs Person"),
                            ("needs_committee", "Needs Committee"),
                            ("needs_attention", "Needs Attention"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("resolution_note", models.TextField(blank=True, default="")),
                ("vote_ids", models.JSONField(default=list)),
                ("bill_sponsorship_ids", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="ScrapedNameUnresolvedMatchOption",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("district", models.CharField(default=None, max_length=300, null=True)),
                ("score", models.FloatField(default=None, null=True)),
            ],
        ),
        migrations.RemoveConstraint(
            model_name="othername",
            name="unique_personname",
        ),
        migrations.RemoveConstraint(
            model_name="othername",
            name="unique_orgname",
        ),
        migrations.RemoveConstraint(
            model_name="othername",
            name="personname_xor_orgname",
        ),
        migrations.RemoveField(
            model_name="billsponsorship",
            name="scraped_name_match_id",
        ),
        migrations.RemoveField(
            model_name="othername",
            name="scraped_name_match_id",
        ),
        migrations.RemoveField(
            model_name="personvote",
            name="scraped_name_match_id",
        ),
        migrations.AddField(
            model_name="scrapednameunresolvedmatchoption",
            name="chamber",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scraped_name_unresolved_person_match_options",
                to="data.organization",
            ),
        ),
        migrations.AddField(
            model_name="scrapednameunresolvedmatchoption",
            name="organization",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scraped_name_unresolved_sponsorship_match_options",
                to="data.organization",
            ),
        ),
        migrations.AddField(
            model_name="scrapednameunresolvedmatchoption",
            name="person",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scraped_name_unresolved_match_options",
                to="data.person",
            ),
        ),
        migrations.AddField(
            model_name="scrapednameunresolvedmatchoption",
            name="unresolved_match",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="options",
                to="data.scrapednameunresolvedmatch",
            ),
        ),
        migrations.AddField(
            model_name="scrapednameunresolvedmatch",
            name="chamber",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scraped_names_unresolved_matches",
                to="data.organization",
            ),
        ),
        migrations.AddField(
            model_name="scrapednameunresolvedmatch",
            name="chosen_option",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="chosen",
                to="data.scrapednameunresolvedmatchoption",
            ),
        ),
        migrations.AddField(
            model_name="scrapednameunresolvedmatch",
            name="legislative_session",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scraped_name_unresolved_matches",
                to="data.legislativesession",
            ),
        ),
        migrations.AddField(
            model_name="scrapednamematch",
            name="from_unresolved_match",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="matched_name",
                to="data.scrapednameunresolvedmatch",
            ),
        ),
        migrations.AddField(
            model_name="scrapednamematch",
            name="legislative_session",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scraped_names",
                to="data.legislativesession",
            ),
        ),
        migrations.AddField(
            model_name="scrapednamematch",
            name="matched_chamber",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scraped_names",
                to="data.organization",
            ),
        ),
        migrations.AddField(
            model_name="scrapednamematch",
            name="matched_organization",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sponsorships_scraped_names",
                to="data.organization",
            ),
        ),
        migrations.AddField(
            model_name="scrapednamematch",
            name="matched_person",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scraped_names",
                to="data.person",
            ),
        ),
        migrations.AddField(
            model_name="billsponsorship",
            name="scraped_name_match",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sponsorships",
                to="data.scrapednamematch",
            ),
        ),
        migrations.AddField(
            model_name="personvote",
            name="scraped_name_match",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="votes",
                to="data.scrapednamematch",
            ),
        ),
        migrations.AddConstraint(
            model_name="scrapednameunresolvedmatchoption",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("person__isnull", False),
                    ("organization__isnull", False),
                    _connector="OR",
                ),
                name="unresolved_match_option_membership_xor_organization",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="scrapednameunresolvedmatchoption",
            unique_together={
                ("unresolved_match", "organization"),
                ("unresolved_match", "person", "chamber"),
            },
        ),
        migrations.AddConstraint(
            model_name="scrapednameunresolvedmatch",
            constraint=models.UniqueConstraint(
                condition=models.Q(("chamber__isnull", False)),
                fields=("legislative_session", "chamber", "value"),
                name="unique_with_chamber",
            ),
        ),
        migrations.AddConstraint(
            model_name="scrapednameunresolvedmatch",
            constraint=models.UniqueConstraint(
                condition=models.Q(("chamber", None)),
                fields=("legislative_session", "value"),
                name="unique_without_chamber",
            ),
        ),
        migrations.AddConstraint(
            model_name="scrapednamematch",
            constraint=models.UniqueConstraint(
                condition=models.Q(("matched_chamber__isnull", False)),
                fields=("legislative_session", "matched_chamber", "value"),
                name="match_unique_with_chamber",
            ),
        ),
        migrations.AddConstraint(
            model_name="scrapednamematch",
            constraint=models.UniqueConstraint(
                condition=models.Q(("matched_chamber", None)),
                fields=("legislative_session", "value"),
                name="match_unique_without_chamber",
            ),
        ),
        migrations.AddConstraint(
            model_name="scrapednamematch",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("matched_organization__isnull", True),
                        ("matched_person__isnull", False),
                    ),
                    models.Q(
                        ("matched_organization__isnull", False),
                        ("matched_person__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="scraped_name_match_membership_xor_organization",
            ),
        ),
    ]
